#!/usr/bin/env python3
"""
Script de correction des chemins pour Google Colab
√Ä ex√©cuter si les chemins sont encore imbriqu√©s
"""

import os
from pathlib import Path

def force_fix_colab_paths():
    """Force la correction des chemins Colab"""
    print("üîß Correction FORC√âE des chemins Colab")
    print("=" * 50)

    current_dir = Path.cwd()
    print(f"R√©pertoire actuel: {current_dir}")

    # Analyser le chemin actuel
    path_str = str(current_dir)
    project_name = 'EvaDentalAI_Yolo'

    if project_name in path_str:
        # Trouver toutes les occurrences
        parts = path_str.split(project_name)
        print(f"Occurrences de '{project_name}': {len(parts) - 1}")

        if len(parts) > 2:  # Plus d'une occurrence
            print("üîç Chemins imbriqu√©s d√©tect√©s")

            # Construire le chemin corrig√© (premi√®re occurrence seulement)
            corrected_path = parts[0] + project_name
            print(f"Chemin corrig√©: {corrected_path}")

            target_dir = Path(corrected_path)

            # V√©rifier que le r√©pertoire cible existe et contient les fichiers du projet
            if target_dir.exists():
                print(f"‚úÖ R√©pertoire cible existe: {target_dir}")

                # V√©rifier les fichiers du projet
                has_scripts = (target_dir / 'scripts').exists()
                has_data = (target_dir / 'data').exists()

                print(f"   Scripts: {'‚úÖ' if has_scripts else '‚ùå'}")
                print(f"   Data: {'‚úÖ' if has_data else '‚ùå'}")

                if has_scripts and has_data:
                    print("üéØ Navigation vers le r√©pertoire corrig√©...")
                    try:
                        os.chdir(target_dir)
                        print(f"‚úÖ Navigation r√©ussie vers: {Path.cwd()}")

                        # V√©rifier le r√©sultat
                        verify_fix()
                        return True
                    except Exception as e:
                        print(f"‚ùå Erreur de navigation: {e}")
                        return False
                else:
                    print("‚ö†Ô∏è Le r√©pertoire cible ne contient pas tous les fichiers du projet")
                    return False
            else:
                print(f"‚ùå R√©pertoire cible n'existe pas: {target_dir}")
                return False
        else:
            print("‚úÖ Aucun chemin imbriqu√© d√©tect√©")
            verify_fix()
            return True
    else:
        print(f"‚ö†Ô∏è Projet '{project_name}' non trouv√© dans le chemin")
        return False

def verify_fix():
    """V√©rifie que la correction a fonctionn√©"""
    print("\nüîç V√©rification de la correction:")

    current = Path.cwd()
    print(f"R√©pertoire actuel: {current}")

    # V√©rifier les fichiers du projet
    dirs_to_check = ['scripts', 'data', 'models']
    for dir_name in dirs_to_check:
        dir_path = current / dir_name
        status = "‚úÖ" if dir_path.exists() else "‚ùå"
        print(f"   {status} {dir_name}/")

    # V√©rifier si le chemin contient encore des imbrications
    path_str = str(current)
    project_name = 'EvaDentalAI_Yolo'
    occurrences = path_str.count(project_name)

    if occurrences <= 1:
        print("‚úÖ Chemin corrig√© avec succ√®s")
        return True
    else:
        print(f"‚ö†Ô∏è Chemin encore imbriqu√© ({occurrences} occurrences)")
        return False

def emergency_fix():
    """Solution d'urgence si la correction automatique √©choue"""
    print("\nüö® SOLUTION D'URGENCE")
    print("=" * 30)

    print("Si la correction automatique √©choue, ex√©cutez manuellement:")
    print()
    print("# Dans Google Colab, ex√©cutez ces commandes:")
    print("import os")
    print("os.chdir('/content/EvaDentalAI_Yolo')  # Adapter selon votre structure")
    print("print('R√©pertoire actuel:', os.getcwd())")
    print()
    print("# Puis relancer le script:")
    print("exec(open('scripts/download_dentex_simple.py').read())")

if __name__ == "__main__":
    print("üöÄ Correction des chemins Colab")
    print("=" * 40)

    success = force_fix_colab_paths()

    if success:
        print("\nüéâ Correction termin√©e avec succ√®s!")
        print("Vous pouvez maintenant ex√©cuter le script de t√©l√©chargement.")
    else:
        print("\n‚ùå Correction automatique √©chou√©e")
        emergency_fix()

    print("\nüí° Prochaines √©tapes:")
    print("1. V√©rifiez que vous √™tes dans le bon r√©pertoire")
    print("2. Ex√©cutez: python scripts/download_dentex_simple.py")
    print("3. Les chemins devraient maintenant √™tre corrects")
